syntax = "proto3";

service SimpleService {
    rpc GetChord(GetInfo) returns (stream GetNodeChordReply);
    rpc GetNode(GetInfo) returns (GetNodeChordReply);
    rpc Save(SaveKey) returns (SRFReply);
    rpc Remove(RemFiKey) returns (SRFReply);
    rpc Find(RemFiKey) returns (SRFReply);
    rpc GetType(GetInfo) returns (TypeReply);
}

// Commands from client
/*
● get_info
Calls get_chord_info() if connected to a registry. Or get_finger_table() if connected
to a node.
*/
message GetInfo {
}

/*
key: some key
text: some “text” here
It tells the connected node to save the text with the given key. Prints the result.
*/
message SaveKey {
    string key = 1;
    string text = 2;
}

/*
It tells the connected node  
to remove the text with the given key/to find a node with the key.
*/
message RemFiKey {
    string key = 1;
}


// Reply for client

//Return list of tuples/finger table
message GetNodeChordReply {
    int32 id = 1;
    repeated string table = 2;
}

message SRFReply {
    string reply =1;
}

message TypeReply {
    string type = 1;
}